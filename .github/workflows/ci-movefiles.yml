name: MoveFiles CI

on:
  push:
    branches: 
      - master
  pull_request: 
    branches:
      - master

jobs:
  build-and-release:
    if: github.event_name == 'push'
    name: MoveFiles CI
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1

      - name: Install dependencies/ Build/ Publish/ Zip application package
        shell: powershell
        run: |
          cd src/MoveFiles.Main
          dotnet restore
          dotnet build --configuration Release --no-restore
          dotnet publish -r win-x64 -c Release /p:PublishTrimmed=true -o ../../package

          # Go to package and .zip raw contents
          cd ../../package
          Compress-Archive -Path ./* -DestinationPath ./MoveFiles.zip

          # Get file version details to prepare for release
          $fileVersion = (Get-Command ./MoveFiles.Main.dll).FileVersionInfo.FileVersion
          
          # Set environment variables
          $env:tagname="v$fileVersion"
          $env:releasename="Release-v$fileVersion"

          # Print environment variables
          echo "Local environment variables"
          echo "::tagname=$env:tagname"
          echo "::releasename=$env:releasename"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:          
          tag_name: ${{ $env:tagname }}
          release_name: ${{ $env:releasename }}
          prerelease: false # set true if just testing
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ../../package/MoveFiles.zip
          asset_name: MoveFiles.zip
          asset_content_type: application/zip
